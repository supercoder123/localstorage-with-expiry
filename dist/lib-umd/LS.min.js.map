{"version":3,"file":"LS.min.js","mappings":"gCAMA,E,SAAA,aAGE,WAAoBA,GAAA,KAAAA,QAAAA,EAFZ,KAAAC,UAAY,aAGXC,OAILC,KAAKH,QAAUA,GAAWE,OAAOE,aAH7BC,QAAQC,MAAM,wBAItB,CAgDF,OA9CE,YAAAC,QAAA,SAAQC,EAAaC,EAAYC,GAC7B,IAAMC,EAAiB,CACnBH,IAAKL,KAAKF,UAAYO,EACtBC,MAAK,GAELC,IACAC,EAAS,GAAIR,KAAKS,mBAAmBF,IAEzC,IACIP,KAAKH,QAAQO,QAAQC,EAAKK,KAAKC,UAAUH,G,CAC3C,MAAOI,GACLV,QAAQC,MAAM,QAASS,E,CAE/B,EAEQ,YAAAH,mBAAR,SAA2BF,GACvB,OAAgB,IAATA,EAAgBM,KAAKC,KAChC,EAEA,YAAAC,QAAA,SAAQV,GACJ,IAAMW,EAAON,KAAKO,MAAMjB,KAAKH,QAAQkB,QAAQV,IAC7C,OAAKW,EAGDA,GAAQH,KAAKC,MAAQE,EAAKE,IAC1BlB,KAAKH,QAAQsB,WAAWd,GACjB,MAEJW,EAAKV,MANH,IAOb,EAEA,YAAAc,KAAA,WACI,IAAgC,UAAAC,OAAOC,QAAgBtB,KAAKH,SAA5B,eAAsC,CAA7D,WAACQ,EAAG,KAAc,KACNkB,QAAQvB,KAAKF,WAAa,GACvCI,QAAQsB,IAAInB,EAAKL,KAAKe,QAAQV,G,CAG1C,EAEA,YAAAc,WAAA,SAAWd,GACP,OAAOL,KAAKH,QAAQsB,WAAWd,EACnC,EAEA,YAAAoB,MAAA,WACIzB,KAAKH,QAAQ4B,OACjB,EACF,EAzDA,G","sources":["webpack://LS/./index.ts"],"sourcesContent":["type LStorage = {\n  key: string;\n  value: any;\n  ts?: number;\n};\n\nexport default class {\n  private keyPrefix = '__ls_key__';\n\n  constructor(private storage?) {\n      if (!window) {\n          console.error('Could not find window');\n          return;\n      }\n      this.storage = storage || window.localStorage;\n  }\n\n  setItem(key: string, value: any, expiry?: number) {\n      const data: LStorage = {\n          key: this.keyPrefix + key,\n          value,\n      };\n      if (expiry) {\n          data['ts'] = this.getExpiryTimeStamp(expiry);\n      }\n      try {\n          this.storage.setItem(key, JSON.stringify(data));\n      } catch (e) {\n          console.error('Error', e);\n      }\n  }\n\n  private getExpiryTimeStamp(expiry: number) {\n      return expiry * 1000 + Date.now();\n  }\n\n  getItem(key: string) {\n      const item = JSON.parse(this.storage.getItem(key));\n      if (!item) {\n        return null;\n      }\n      if (item && Date.now() > item.ts) {\n          this.storage.removeItem(key);\n          return null;\n      }\n      return item.value;\n  }\n\n  list() {\n      for (let [key, storageValue] of Object.entries<string>(this.storage)) {\n          if (storageValue.indexOf(this.keyPrefix) > 0) {\n              console.log(key, this.getItem(key));\n          }\n      }\n  }\n\n  removeItem(key: string) {\n      return this.storage.removeItem(key);\n  }\n\n  clear() {\n      this.storage.clear();\n  }\n}\n"],"names":["storage","keyPrefix","window","this","localStorage","console","error","setItem","key","value","expiry","data","getExpiryTimeStamp","JSON","stringify","e","Date","now","getItem","item","parse","ts","removeItem","list","Object","entries","indexOf","log","clear"],"sourceRoot":""}